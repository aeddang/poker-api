swagger: "2.0"
info:
  version: "0.0.2"
  title: Poker Api
# during dev, should point to your local machine
host: api.ironraft.com
# basePath prefixes all resource paths
basePath: /api
#
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  
          
  /users:
    x-swagger-router-controller: poker
    get:

      description: returns users
      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"

  /users/{userId}:
    x-swagger-router-controller: poker
    get:
      description: returns user 
      parameters:
        - name: userId
          in: path
          type: string
          required: true
        - name: rid
          in: query
          type: string
          required: false
      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
    
    
    post:
      description: create new user
     
      parameters:
        - name: userId
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            type: object
            required:
              - snsToken
            properties:
              profileImg:
                type: string
              name:
                type: string
              snsToken:
                type: string
              character:
                type: string
          required: true

      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
  

    put:
      description: update user
      parameters:
        - name: loginToken
          in: header
          type: string
          required: true
        - name: userId
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            type: object
            required:
              - rid
            properties:
              rid:
                type: string
              profileImg:
                type: string
              name:
                type: string
              snsToken:
                type: string
        
              character:
                type: string
          required: true

      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
            
    delete:
      description: create new user
      parameters:
      
        - name: userId
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            type: object
            required:
              - rid
              - snsToken
            properties:
              rid:
                type: string
              snsToken:
                type: string
          required: true

      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
          
          
  /users/updatebank/{userId}:
    x-swagger-router-controller: poker

    put:
      description: update user bank
      parameters:
        - name: loginToken
          in: header
          type: string
          required: true
        - name: userId
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            type: object
            required:
              - rid
            properties:
              rid:
                type: string
              bank:
                type:  number
          
          required: true

      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
            
    
  
  /users/autosign/{userId}:
    x-swagger-router-controller: poker
    
    post:
      description: create or get user
     
      parameters:
        - name: userId
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            type: object
            required:
              - snsToken
            properties:
              profileImg:
                type: string
              character:
                type: string
              name:
                type: string
              snsToken:
                type: string
          required: true

      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        201:
           $ref: "#/responses/Create"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
          
  /users/update/{serverId}:
    x-swagger-router-controller: poker
    put:
      description: update users
      parameters:
        - name: serverId
          in: path
          type: string
          required: true
        - name: key
          in: query
          type: string
          required: true
        - name: dataType
          in: query
          type: string
          required: true
        - name: serverkey
          in: header
          type: string
          required: true
        - name: users
          in: body
          schema:
            type: array
            items:
              type: object
              required:
                - rid
                - value
              properties:
                rid:
                  type: string
                value:
                  type: object
          required: true
      responses:
        401:
           $ref: "#/responses/UnauthorizedError"
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        409:
          $ref: "#/responses/ConflictedError"
        500:
          $ref: "#/responses/ServerError"
          
  /users/changebank/{serverId}:
    x-swagger-router-controller: poker
    put:
      description: update users bank
      parameters:
        - name: serverId
          in: path
          type: string
          required: true
        - name: serverkey
          in: header
          type: string
          required: true
        - name: users
          in: body
          schema:
            type: array
            items:
              type: object
              required:
                - rid
                - changeBank
              properties:
                rid:
                  type: string
                changeBank:
                  type: number
          required: true
      responses:
        401:
           $ref: "#/responses/UnauthorizedError"
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        409:
          $ref: "#/responses/ConflictedError"
        500:
          $ref: "#/responses/ServerError"
  
  /ranks:
    x-swagger-router-controller: poker
    get:
      description: returns ranks
      parameters:
        - name: groupId
          in: query
          type: string
          required: true
      responses:
        401:
           $ref: '#/responses/UnauthorizedError'
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
          
  /ranks/add/{serverId}:
    x-swagger-router-controller: poker
    put:
      description: add rank
      parameters:
        - name: serverId
          in: path
          type: string
          required: true
        - name: serverkey
          in: header
          type: string
          required: true
        - name: rank
          in: body
          schema:
            type: object
            required:
                - rid
                - getBank
                - changeBank
            properties:
              rid:
                type: string
              rankId:
                type: string
              getBank:
                type: number
              changeBank:
                type: number
              profileImg:
                type: string
              name:
                type: string
              
          required: true
      responses:
        401:
           $ref: "#/responses/UnauthorizedError"
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
  
  /ranks/reset/{serverId}:
    x-swagger-router-controller: poker
    get:
      description: update users bank
      parameters:
        - name: serverId
          in: path
          type: string
          required: true
        - name: serverkey
          in: header
          type: string
          required: true

      responses:
        401:
           $ref: "#/responses/UnauthorizedError"
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
  
  /ranks/sync/{serverId}:
    x-swagger-router-controller: poker
    get:
      description: update users bank
      parameters:
        - name: serverId
          in: path
          type: string
          required: true
        - name: serverkey
          in: header
          type: string
          required: true

      responses:
        401:
           $ref: "#/responses/UnauthorizedError"
        200:
           $ref: "#/responses/Success"
        400:
          $ref: "#/responses/ClientError"
        500:
          $ref: "#/responses/ServerError"
  /swagger:
    x-swagger-pipe: swagger_raw


# complex objects have schema definitions
responses:
  Success: 
    description: success
    schema:
     $ref: "#/definitions/ApiResponse"
  Create: 
    description: create
    schema:
     $ref: "#/definitions/ApiResponse"
  UnauthorizedError:
    description: API key is missing or invalid
    schema:
     $ref: "#/definitions/ErrorResponse"
  ConflictedError:
    description: conflicted updated
    schema:
     $ref: "#/definitions/ErrorResponse"
  ClientError:
    description: error (client)
    schema:
     $ref: "#/definitions/ErrorResponse"
  ServerError:
    description: error (server)
    schema:
     $ref: "#/definitions/ErrorResponse"
        
definitions:
  ApiResponse:
    required:
      - code
      - data
    properties:
      code:
        $ref: "#/definitions/SuccessCode"
      data:
        type: object
      message:
        type: string
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code:
        $ref: "#/definitions/ErrorCode"
      message:
        type: string
  ErrorCode:
    type: string
    enum: &E_CODE
      - '901'
      - '902'
      - '903'
      - '904'
      - '905'    
      - '906'   
  SuccessCode:
    type: string
    enum: &S_CODE
      - '200'
